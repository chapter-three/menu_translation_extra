<?php

/**
 * Implements hook_theme_registry_alter().
 */
function menu_translation_extra_theme_registry_alter(&$theme_registry) {
  if (isset($theme_registry['menu_overview_form'])) {
    $theme_registry['menu_overview_form']['function'] = 'menu_translation_extra_menu_overview_form';
    $theme_registry['menu_overview_form']['file'] = 'menu_translation_extra.module';
    $theme_registry['menu_overview_form']['theme path'] = drupal_get_path('module', 'menu_translation_extra');
  }
}

/**
 * Returns HTML for the menu overview form into a table.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function menu_translation_extra_menu_overview_form($variables) {
  $form = $variables['form'];

  drupal_add_tabledrag('menu-overview', 'match', 'parent', 'menu-plid', 'menu-plid', 'menu-mlid', TRUE, MENU_MAX_DEPTH - 1);
  drupal_add_tabledrag('menu-overview', 'order', 'sibling', 'menu-weight');

  $header = array(
    t('Menu link'),
    array('data' => t('Enabled'), 'class' => array('checkbox')),
    t('Weight'),
    array('data' => t('Operations'), 'colspan' => '3'),
  );

  $rows = array();
  foreach (element_children($form) as $mlid) {
    if (isset($form[$mlid]['hidden'])) {
      $element = &$form[$mlid];
      // Build a list of operations.
      $operations = array();
      foreach (element_children($element['operations']) as $op) {
        $operations[] = array('data' => drupal_render($element['operations'][$op]), 'class' => array('menu-operations'));
      }
      while (count($operations) < 2) {
        $operations[] = '';
      }

      // Add special classes to be used for tabledrag.js.
      $element['plid']['#attributes']['class'] = array('menu-plid');
      $element['mlid']['#attributes']['class'] = array('menu-mlid');
      $element['weight']['#attributes']['class'] = array('menu-weight');
      $link_language = 'lang-' . $element['#item']['language'];

      // Change the parent field to a hidden. This allows any value but hides the field.
      $element['plid']['#type'] = 'hidden';

      $row = array();
      $row[] = theme('indentation', array('size' => $element['#item']['depth'] - 1)) . drupal_render($element['title']);
      $row[] = array('data' => drupal_render($element['hidden']), 'class' => array('checkbox', 'menu-enabled'));
      $row[] = drupal_render($element['weight']) . drupal_render($element['plid']) . drupal_render($element['mlid']);
      $row = array_merge($row, $operations);

      $row = array_merge(array('data' => $row), $element['#attributes']);
      $row['class'][] = 'draggable';
      $row['class'][] = $link_language;
      $rows[] = $row;
    }
  }

  $languages = array();
  $languages['all'] = t('All languages');
  $languages['und'] = t('Language Nuetral');
  $languages_list = array_merge($languages, locale_language_list('name'));

  $form['language_selector'] = array(
    '#type' => 'select',
    '#description' => t('Limit the display of menu items based on their language.'),
    '#options' => $languages_list,
    '#default_value' => array('all'),
    '#weight' => -9999,
    '#attributes' => array(
      'id' => 'menu-overview-form-language-selector',
    ),
  );
  $form['language_selector']['#attached']['js'] = array(drupal_get_path('module', 'menu_translation_extra') . '/menu_translation_extra.js');

  $no_menu_items_to_display = array(
    '#type' => 'markup',
    '#prefix' => '<p id="no_menu_items_to_display">',
    '#markup' => t('There are no menu items to display. Please select another language.'),
    '#suffix' => '</p>',
  );

  $output = '';
  if (empty($rows)) {
    $rows[] = array(array('data' => $form['#empty_text'], 'colspan' => '7'));
  }
  $output .= drupal_render($form['language_selector']);
  $output .= drupal_render($no_menu_items_to_display);
  $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'menu-overview')));
  $output .= drupal_render_children($form);

  return $output;
}
